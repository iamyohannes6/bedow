"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/download";
exports.ids = ["pages/api/download"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("puppeteer");

/***/ }),

/***/ "(api)/__barrel_optimize__?names=addHours,subHours!=!./node_modules/date-fns/index.mjs":
/*!***************************************************************************************!*\
  !*** __barrel_optimize__?names=addHours,subHours!=!./node_modules/date-fns/index.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addHours: () => (/* reexport safe */ F_repo_Behance_Downloader_BEDOW_node_modules_date_fns_addHours_mjs__WEBPACK_IMPORTED_MODULE_0__.addHours),\n/* harmony export */   subHours: () => (/* reexport safe */ F_repo_Behance_Downloader_BEDOW_node_modules_date_fns_subHours_mjs__WEBPACK_IMPORTED_MODULE_1__.subHours)\n/* harmony export */ });\n/* harmony import */ var F_repo_Behance_Downloader_BEDOW_node_modules_date_fns_addHours_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/date-fns/addHours.mjs */ \"(api)/./node_modules/date-fns/addHours.mjs\");\n/* harmony import */ var F_repo_Behance_Downloader_BEDOW_node_modules_date_fns_subHours_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/date-fns/subHours.mjs */ \"(api)/./node_modules/date-fns/subHours.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvX19iYXJyZWxfb3B0aW1pemVfXz9uYW1lcz1hZGRIb3VycyxzdWJIb3VycyE9IS4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNvRyIsInNvdXJjZXMiOlsid2VicGFjazovL2JlZG93Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2luZGV4Lm1qcz8wYzliIl0sInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IHsgYWRkSG91cnMgfSBmcm9tIFwiRjpcXFxccmVwb1xcXFxCZWhhbmNlIERvd25sb2FkZXJcXFxcQkVET1dcXFxcbm9kZV9tb2R1bGVzXFxcXGRhdGUtZm5zXFxcXGFkZEhvdXJzLm1qc1wiXG5leHBvcnQgeyBzdWJIb3VycyB9IGZyb20gXCJGOlxcXFxyZXBvXFxcXEJlaGFuY2UgRG93bmxvYWRlclxcXFxCRURPV1xcXFxub2RlX21vZHVsZXNcXFxcZGF0ZS1mbnNcXFxcc3ViSG91cnMubWpzXCIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/__barrel_optimize__?names=addHours,subHours!=!./node_modules/date-fns/index.mjs\n");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdownload&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cdownload.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdownload&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cdownload.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_download_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\download.ts */ \"(api)/./src/pages/api/download.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_download_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_download_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/download\",\n        pathname: \"/api/download\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_download_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmRvd25sb2FkJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTVDcGFnZXMlNUNhcGklNUNkb3dubG9hZC50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUMyRDtBQUMzRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsdURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHVEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2JlZG93Lz9mYjc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXGRvd25sb2FkLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZG93bmxvYWRcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kb3dubG9hZFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdownload&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cdownload.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/pages/api/download.ts":
/*!***********************************!*\
  !*** ./src/pages/api/download.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_addHours_subHours_date_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! __barrel_optimize__?names=addHours,subHours!=!date-fns */ \"(api)/__barrel_optimize__?names=addHours,subHours!=!./node_modules/date-fns/index.mjs\");\n/* harmony import */ var _utils_behanceExtractor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/behanceExtractor */ \"(api)/./src/utils/behanceExtractor.ts\");\n\n\nconst HOURLY_LIMIT = 20;\nconst RATE_LIMIT_WINDOW = 60 * 60 * 1000; // 1 hour in milliseconds\nconst rateLimitStore = {};\n// Cleanup function to remove expired rate limit entries\nfunction cleanupRateLimitStore() {\n    const now = new Date();\n    Object.keys(rateLimitStore).forEach((ip)=>{\n        if (new Date(rateLimitStore[ip].resetTime) < now) {\n            delete rateLimitStore[ip];\n        }\n    });\n}\n// Run cleanup every hour\nsetInterval(cleanupRateLimitStore, RATE_LIMIT_WINDOW);\n// Function to get rate limit info\nfunction getRateLimitInfo(clientIp) {\n    const now = new Date();\n    const store = rateLimitStore[clientIp];\n    if (!store || new Date(store.resetTime) < now) {\n        // Initialize or reset rate limit\n        rateLimitStore[clientIp] = {\n            downloads: [],\n            resetTime: (0,_barrel_optimize_names_addHours_subHours_date_fns__WEBPACK_IMPORTED_MODULE_1__.addHours)(now, 1).toISOString()\n        };\n        return {\n            used: 0,\n            limit: HOURLY_LIMIT,\n            remaining: HOURLY_LIMIT,\n            resetTime: rateLimitStore[clientIp].resetTime\n        };\n    }\n    // Clean up old downloads within the current window\n    store.downloads = store.downloads.filter((timestamp)=>new Date(timestamp) > (0,_barrel_optimize_names_addHours_subHours_date_fns__WEBPACK_IMPORTED_MODULE_1__.subHours)(now, 1));\n    const used = store.downloads.length;\n    return {\n        used,\n        limit: HOURLY_LIMIT,\n        remaining: Math.max(0, HOURLY_LIMIT - used),\n        resetTime: store.resetTime\n    };\n}\n// Function to check rate limit without updating\nfunction checkRateLimitOnly(clientIp) {\n    const info = getRateLimitInfo(clientIp);\n    return {\n        allowed: info.remaining > 0,\n        info\n    };\n}\n// Function to record a download\nfunction recordDownload(clientIp) {\n    const store = rateLimitStore[clientIp];\n    if (!store) return getRateLimitInfo(clientIp);\n    store.downloads.push(new Date().toISOString());\n    return getRateLimitInfo(clientIp);\n}\n// Get client IP with fallback options\nfunction getClientIp(req) {\n    const forwarded = req.headers[\"x-forwarded-for\"];\n    const ip = forwarded ? typeof forwarded === \"string\" ? forwarded : forwarded[0] : req.socket.remoteAddress;\n    return ip || \"unknown\";\n}\nasync function handler(req, res) {\n    // Enable CORS\n    res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n    res.setHeader(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS\");\n    res.setHeader(\"Access-Control-Allow-Headers\", \"X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version\");\n    if (req.method === \"OPTIONS\") {\n        res.status(200).end();\n        return;\n    }\n    if (req.method === \"POST\") {\n        try {\n            const { url, action = \"search\" } = req.body;\n            const clientIp = getClientIp(req);\n            if (!url) {\n                return res.status(400).json({\n                    error: \"URL is required\",\n                    rateLimit: getRateLimitInfo(clientIp)\n                });\n            }\n            if (!url.includes(\"behance.net/gallery\")) {\n                return res.status(400).json({\n                    error: \"Invalid Behance gallery URL\",\n                    rateLimit: getRateLimitInfo(clientIp)\n                });\n            }\n            // For search action, just check the limit without counting\n            if (action === \"search\") {\n                const { allowed, info } = checkRateLimitOnly(clientIp);\n                if (!allowed) {\n                    return res.status(429).json({\n                        error: \"Rate limit exceeded. Please try again later or upgrade to our Chrome extension for unlimited downloads.\",\n                        rateLimit: info\n                    });\n                }\n                try {\n                    const images = await (0,_utils_behanceExtractor__WEBPACK_IMPORTED_MODULE_0__.extractBehanceImages)(url);\n                    if (images.length > 0) {\n                        return res.status(200).json({\n                            message: \"Success\",\n                            images: images.map((img)=>({\n                                    ...img,\n                                    url: img.url.replace(/^\\/\\//, \"https://\") // Ensure URLs have protocol\n                                })),\n                            rateLimit: info\n                        });\n                    }\n                } catch (error) {\n                    console.error(\"Server-side extraction failed:\", error);\n                    return res.status(200).json({\n                        message: \"Please use client-side download\",\n                        useClientDownload: true,\n                        rateLimit: info,\n                        instructions: {\n                            selectors: [\n                                'img[src*=\"mir-s3-cdn-cf.behance.net\"]',\n                                'img[data-src*=\"mir-s3-cdn-cf.behance.net\"]',\n                                'img[srcset*=\"mir-s3-cdn-cf.behance.net\"]',\n                                '[style*=\"background-image\"][style*=\"mir-s3-cdn-cf.behance.net\"]',\n                                'source[srcset*=\"mir-s3-cdn-cf.behance.net\"]'\n                            ],\n                            qualityReplacements: [\n                                {\n                                    from: /\\/fs\\/.*?\\//,\n                                    to: \"/original/\"\n                                },\n                                {\n                                    from: /\\/[2-8]00\\//,\n                                    to: \"/2000/\"\n                                }\n                            ]\n                        }\n                    });\n                }\n            }\n            // For download action, check and update the limit\n            if (action === \"download\") {\n                const { allowed, info } = checkRateLimitOnly(clientIp);\n                if (!allowed) {\n                    return res.status(429).json({\n                        error: \"Rate limit exceeded. Please try again later or upgrade to our Chrome extension for unlimited downloads.\",\n                        rateLimit: info\n                    });\n                }\n                // Record the download and get updated info\n                const updatedInfo = recordDownload(clientIp);\n                return res.status(200).json({\n                    message: \"Download recorded\",\n                    rateLimit: updatedInfo\n                });\n            }\n        } catch (error) {\n            console.error(\"Download error:\", error);\n            const clientIp = getClientIp(req);\n            return res.status(500).json({\n                error: error instanceof Error ? error.message : \"Internal server error\",\n                useClientDownload: true,\n                rateLimit: getRateLimitInfo(clientIp)\n            });\n        }\n    }\n    return res.status(405).json({\n        error: \"Method not allowed\",\n        rateLimit: getRateLimitInfo(getClientIp(req))\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/download.ts\n");

/***/ }),

/***/ "(api)/./src/utils/behanceExtractor.ts":
/*!***************************************!*\
  !*** ./src/utils/behanceExtractor.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractBehanceImages: () => (/* binding */ extractBehanceImages),\n/* harmony export */   extractProjectId: () => (/* binding */ extractProjectId)\n/* harmony export */ });\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(puppeteer__WEBPACK_IMPORTED_MODULE_0__);\n\n// Function to validate and clean Behance URL\nfunction validateAndCleanUrl(url) {\n    try {\n        // Remove any query parameters and trailing slashes\n        let cleanUrl = url.split(\"?\")[0].replace(/\\/+$/, \"\");\n        // Handle search URLs by extracting the first project\n        if (cleanUrl.includes(\"/search/projects\")) {\n            throw new Error(\"Please provide a direct Behance project URL instead of a search URL. Example: https://www.behance.net/gallery/123456/Project-Name\");\n        }\n        // Convert short URLs to full gallery URLs\n        if (cleanUrl.match(/behance\\.net\\/gallery\\/\\d+$/)) {\n            return cleanUrl;\n        }\n        // Handle direct project URLs\n        if (cleanUrl.includes(\"behance.net/gallery/\")) {\n            return cleanUrl;\n        }\n        throw new Error(\"Invalid Behance URL. Please provide a direct project URL. Example: https://www.behance.net/gallery/123456/Project-Name\");\n    } catch (error) {\n        throw error;\n    }\n}\n// Function to extract project ID from Behance URL\nfunction extractProjectId(url) {\n    const cleanUrl = validateAndCleanUrl(url);\n    const match = cleanUrl.match(/gallery\\/(\\d+)/);\n    if (!match) {\n        throw new Error(\"Could not extract project ID from URL. Please provide a valid Behance project URL.\");\n    }\n    return match[1];\n}\n// Function to sanitize filename\nfunction sanitizeFilename(name) {\n    return name.toLowerCase().replace(/[^a-z0-9]/gi, \"_\").replace(/_+/g, \"_\").replace(/^_|_$/g, \"\").substring(0, 50) || \"image\";\n}\n// Function to get highest quality URL\nfunction getHighestQualityUrl(url) {\n    if (!url) return \"\";\n    // Ensure URL starts with https://\n    const cleanUrl = url.replace(/^\\/\\//, \"https://\");\n    // Try to get the highest quality version\n    return cleanUrl.replace(/\\/fs\\/.*?\\//, \"/original/\").replace(/\\/200H?\\//, \"/2000/\").replace(/\\/400H?\\//, \"/2000/\").replace(/\\/600H?\\//, \"/2000/\").replace(/\\/800H?\\//, \"/2000/\").replace(/\\/1400H?\\//, \"/2000/\").replace(/_200\\./g, \"_2000.\").replace(/_400\\./g, \"_2000.\").replace(/_600\\./g, \"_2000.\").replace(/_800\\./g, \"_2000.\").replace(/_1400\\./g, \"_2000.\");\n}\n// Function to get file extension from URL or content type\nfunction getExtensionFromUrl(url) {\n    const extensions = [\n        \".jpg\",\n        \".jpeg\",\n        \".png\",\n        \".gif\",\n        \".webp\"\n    ];\n    const urlLower = url.toLowerCase();\n    for (const ext of extensions){\n        if (urlLower.includes(ext)) {\n            return ext;\n        }\n    }\n    return \".jpg\";\n}\n// Main function to extract images from Behance project\nasync function extractBehanceImages(url) {\n    let browser;\n    try {\n        const projectId = extractProjectId(url);\n        const projectUrl = `https://www.behance.net/gallery/${projectId}`;\n        // Launch browser with specific options\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0___default().launch({\n            headless: true,\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-dev-shm-usage\",\n                \"--disable-accelerated-2d-canvas\",\n                \"--disable-gpu\",\n                \"--window-size=1920x1080\"\n            ]\n        });\n        const page = await browser.newPage();\n        await page.setViewport({\n            width: 1920,\n            height: 1080\n        });\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n        // Navigate to the page\n        await page.goto(projectUrl, {\n            waitUntil: \"networkidle0\",\n            timeout: 30000\n        });\n        // Extract project title\n        const projectTitle = await page.evaluate(()=>{\n            const titleMeta = document.querySelector('meta[property=\"og:title\"]');\n            return titleMeta?.getAttribute(\"content\") || \"behance_project\";\n        });\n        // Extract all image URLs\n        const images = [];\n        const seen = new Set();\n        const imageUrls = await page.evaluate(()=>{\n            const urls = [];\n            document.querySelectorAll(\"img\").forEach((img)=>{\n                const src = img.src || img.getAttribute(\"data-src\") || \"\";\n                if (src && src.includes(\"mir-s3-cdn-cf.behance.net\")) {\n                    urls.push(src);\n                }\n            });\n            return urls;\n        });\n        // Process found images\n        for (const imageUrl of imageUrls){\n            const highQualityUrl = getHighestQualityUrl(imageUrl);\n            if (highQualityUrl && !seen.has(highQualityUrl)) {\n                seen.add(highQualityUrl);\n                images.push({\n                    url: highQualityUrl,\n                    filename: `${sanitizeFilename(projectTitle)}_${images.length + 1}${getExtensionFromUrl(highQualityUrl)}`\n                });\n            }\n        }\n        // If no images found, try scrolling\n        if (images.length === 0) {\n            await page.evaluate(()=>window.scrollTo(0, document.body.scrollHeight));\n            await new Promise((resolve)=>setTimeout(resolve, 2000));\n            const moreImageUrls = await page.evaluate(()=>{\n                const urls = [];\n                document.querySelectorAll(\"img\").forEach((img)=>{\n                    const src = img.src || img.getAttribute(\"data-src\") || \"\";\n                    if (src && src.includes(\"mir-s3-cdn-cf.behance.net\")) {\n                        urls.push(src);\n                    }\n                });\n                return urls;\n            });\n            for (const imageUrl of moreImageUrls){\n                const highQualityUrl = getHighestQualityUrl(imageUrl);\n                if (highQualityUrl && !seen.has(highQualityUrl)) {\n                    seen.add(highQualityUrl);\n                    images.push({\n                        url: highQualityUrl,\n                        filename: `${sanitizeFilename(projectTitle)}_${images.length + 1}${getExtensionFromUrl(highQualityUrl)}`\n                    });\n                }\n            }\n        }\n        if (images.length === 0) {\n            throw new Error(\"No images found in the gallery. Please make sure the URL is correct and the project is public.\");\n        }\n        return images;\n    } catch (error) {\n        if (error.message.includes(\"search/projects\")) {\n            throw new Error(\"Please provide a direct Behance project URL instead of a search URL. Example: https://www.behance.net/gallery/123456/Project-Name\");\n        }\n        if (error.message.includes(\"Invalid Behance URL\")) {\n            throw new Error(\"Invalid URL format. Please provide a direct Behance project URL. Example: https://www.behance.net/gallery/123456/Project-Name\");\n        }\n        console.error(\"Error extracting images:\", error);\n        throw error;\n    } finally{\n        if (browser) {\n            await browser.close();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/utils/behanceExtractor.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/date-fns"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdownload&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cdownload.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();